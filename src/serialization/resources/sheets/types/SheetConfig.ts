/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { SheetAccess } from "./SheetAccess";
import { Property } from "../../property/types/Property";
import { Action } from "../../commons/types/Action";
import { SheetConstraint } from "./SheetConstraint";
import { SheetTreatments } from "./SheetTreatments";

export const SheetConfig: core.serialization.ObjectSchema<serializers.SheetConfig.Raw, Flatfile.SheetConfig> =
    core.serialization.object({
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        slug: core.serialization.string().optional(),
        readonly: core.serialization.boolean().optional(),
        allowAdditionalFields: core.serialization.boolean().optional(),
        mappingConfidenceThreshold: core.serialization.number().optional(),
        access: core.serialization.list(SheetAccess).optional(),
        fields: core.serialization.list(Property),
        actions: core.serialization.list(Action).optional(),
        metadata: core.serialization.any().optional(),
        constraints: core.serialization.list(SheetConstraint).optional(),
        treatments: core.serialization.list(SheetTreatments).optional(),
        collection: core.serialization.string().optional(),
    });

export declare namespace SheetConfig {
    export interface Raw {
        name: string;
        description?: string | null;
        slug?: string | null;
        readonly?: boolean | null;
        allowAdditionalFields?: boolean | null;
        mappingConfidenceThreshold?: number | null;
        access?: SheetAccess.Raw[] | null;
        fields: Property.Raw[];
        actions?: Action.Raw[] | null;
        metadata?: any | null;
        constraints?: SheetConstraint.Raw[] | null;
        treatments?: SheetTreatments.Raw[] | null;
        collection?: string | null;
    }
}
