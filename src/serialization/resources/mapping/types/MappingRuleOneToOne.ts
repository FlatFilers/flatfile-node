/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const MappingRuleOneToOne: core.serialization.ObjectSchema<
    serializers.MappingRuleOneToOne.Raw,
    Flatfile.MappingRuleOneToOne
> = core.serialization
    .object({
        sourceField: core.serialization.string(),
        destinationField: core.serialization.string(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).MappingRuleBase));

export declare namespace MappingRuleOneToOne {
    interface Raw extends serializers.MappingRuleBase.Raw {
        sourceField: string;
        destinationField: string;
    }
}
