/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { MappingRuleOrConfig } from "./MappingRuleOrConfig";
import { FamilyId } from "../../commons/types/FamilyId";
import { UserId } from "../../commons/types/UserId";
import { ProgramSummary } from "./ProgramSummary";
import { ActorId } from "../../commons/types/ActorId";

export const Program: core.serialization.ObjectSchema<serializers.Program.Raw, Flatfile.Program> =
    core.serialization.object({
        rules: core.serialization.list(MappingRuleOrConfig),
        id: core.serialization.string().optional(),
        namespace: core.serialization.string().optional(),
        familyId: FamilyId.optional(),
        createdAt: core.serialization.date().optional(),
        createdBy: UserId.optional(),
        sourceKeys: core.serialization.list(core.serialization.string()),
        destinationKeys: core.serialization.list(core.serialization.string()),
        summary: ProgramSummary.optional(),
        accessToken: core.serialization.string().optional(),
        acceptedAt: core.serialization.date().optional(),
        acceptedBy: ActorId.optional(),
    });

export declare namespace Program {
    export interface Raw {
        rules: MappingRuleOrConfig.Raw[];
        id?: string | null;
        namespace?: string | null;
        familyId?: FamilyId.Raw | null;
        createdAt?: string | null;
        createdBy?: UserId.Raw | null;
        sourceKeys: string[];
        destinationKeys: string[];
        summary?: ProgramSummary.Raw | null;
        accessToken?: string | null;
        acceptedAt?: string | null;
        acceptedBy?: ActorId.Raw | null;
    }
}
