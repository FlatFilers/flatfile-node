/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { ThreadId } from "../../commons/types/ThreadId";
import { ThreadMetadata } from "./ThreadMetadata";
import { ThreadState } from "./ThreadState";
import { ThreadStatus } from "./ThreadStatus";

export const ThreadModel: core.serialization.ObjectSchema<serializers.ThreadModel.Raw, Flatfile.ThreadModel> =
    core.serialization.object({
        id: ThreadId,
        resourceId: core.serialization.string(),
        metadata: ThreadMetadata.optional(),
        source: core.serialization.string().optional(),
        state: ThreadState.optional(),
        status: ThreadStatus,
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
    });

export declare namespace ThreadModel {
    export interface Raw {
        id: ThreadId.Raw;
        resourceId: string;
        metadata?: ThreadMetadata.Raw | null;
        source?: string | null;
        state?: ThreadState.Raw | null;
        status: ThreadStatus.Raw;
        createdAt: string;
        updatedAt: string;
    }
}
