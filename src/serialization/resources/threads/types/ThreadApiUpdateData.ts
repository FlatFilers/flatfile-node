/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { ThreadMetadata } from "./ThreadMetadata";
import { ThreadState } from "./ThreadState";
import { ThreadStatus } from "./ThreadStatus";
import { StateUpdateStrategy } from "./StateUpdateStrategy";

export const ThreadApiUpdateData: core.serialization.ObjectSchema<
    serializers.ThreadApiUpdateData.Raw,
    Flatfile.ThreadApiUpdateData
> = core.serialization.object({
    resourceId: core.serialization.string().optional(),
    metadata: ThreadMetadata.optional(),
    source: core.serialization.string().optional(),
    state: ThreadState.optional(),
    status: ThreadStatus.optional(),
    stateUpdateStrategy: StateUpdateStrategy.optional(),
});

export declare namespace ThreadApiUpdateData {
    export interface Raw {
        resourceId?: string | null;
        metadata?: ThreadMetadata.Raw | null;
        source?: string | null;
        state?: ThreadState.Raw | null;
        status?: ThreadStatus.Raw | null;
        stateUpdateStrategy?: StateUpdateStrategy.Raw | null;
    }
}
