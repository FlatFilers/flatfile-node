/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
import { CanvasAreaId } from "../../commons/types/CanvasAreaId";
import { CanvasId } from "../../commons/types/CanvasId";
import { CanvasAreaLayout } from "./CanvasAreaLayout";
import { CanvasAreaType } from "./CanvasAreaType";
import { CanvasAreaPosition } from "./CanvasAreaPosition";
import { CanvasAreaVisibility } from "./CanvasAreaVisibility";

export const CanvasArea: core.serialization.ObjectSchema<serializers.CanvasArea.Raw, Flatfile.CanvasArea> =
    core.serialization.object({
        id: CanvasAreaId,
        canvasId: CanvasId,
        parentId: CanvasAreaId.optional(),
        config: core.serialization.any(),
        metadata: core.serialization.any(),
        layout: CanvasAreaLayout,
        overlay: core.serialization.any(),
        type: CanvasAreaType,
        position: CanvasAreaPosition,
        visibility: CanvasAreaVisibility,
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
        deletedAt: core.serialization.date().optional(),
    });

export declare namespace CanvasArea {
    interface Raw {
        id: CanvasAreaId.Raw;
        canvasId: CanvasId.Raw;
        parentId?: CanvasAreaId.Raw | null;
        config?: any;
        metadata?: any;
        layout: CanvasAreaLayout.Raw;
        overlay?: any;
        type: CanvasAreaType.Raw;
        position: CanvasAreaPosition.Raw;
        visibility: CanvasAreaVisibility.Raw;
        createdAt: string;
        updatedAt: string;
        deletedAt?: string | null;
    }
}
