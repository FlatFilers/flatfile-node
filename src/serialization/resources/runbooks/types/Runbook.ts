/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
import { RunbookId } from "../../commons/types/RunbookId";
import { AccountId } from "../../commons/types/AccountId";
import { AppId } from "../../commons/types/AppId";
import { EnvironmentId } from "../../commons/types/EnvironmentId";
import { SpaceId } from "../../commons/types/SpaceId";
import { RunbookConfig } from "./RunbookConfig";
import { RunbookStatus } from "./RunbookStatus";
import { RunbookType } from "./RunbookType";

export const Runbook: core.serialization.ObjectSchema<serializers.Runbook.Raw, Flatfile.Runbook> =
    core.serialization.object({
        id: RunbookId,
        accountId: AccountId,
        appId: AppId,
        environmentId: EnvironmentId,
        spaceId: SpaceId,
        name: core.serialization.string(),
        config: RunbookConfig,
        status: RunbookStatus,
        type: RunbookType,
        createdBy: core.serialization.string(),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
    });

export declare namespace Runbook {
    interface Raw {
        id: RunbookId.Raw;
        accountId: AccountId.Raw;
        appId: AppId.Raw;
        environmentId: EnvironmentId.Raw;
        spaceId: SpaceId.Raw;
        name: string;
        config: RunbookConfig.Raw;
        status: RunbookStatus.Raw;
        type: RunbookType.Raw;
        createdBy: string;
        createdAt: string;
        updatedAt: string;
    }
}
