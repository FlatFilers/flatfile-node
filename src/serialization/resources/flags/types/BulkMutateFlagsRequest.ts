/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { FlagOperation } from "./FlagOperation";
import { FlagMutationData } from "./FlagMutationData";

export const BulkMutateFlagsRequest: core.serialization.ObjectSchema<
    serializers.BulkMutateFlagsRequest.Raw,
    Flatfile.BulkMutateFlagsRequest
> = core.serialization.object({
    operation: FlagOperation,
    slug: core.serialization.string(),
    flag: FlagMutationData.optional(),
    exceptions: core.serialization.list(core.serialization.string()).optional(),
    query: core.serialization.string().optional(),
    filter: core.serialization.any().optional(),
    filterField: core.serialization.string().optional(),
    searchValue: core.serialization.string().optional(),
    searchField: core.serialization.string().optional(),
    q: core.serialization.string().optional(),
    ids: core.serialization.list(core.serialization.string()).optional(),
    snapshotLabel: core.serialization.string().optional(),
});

export declare namespace BulkMutateFlagsRequest {
    export interface Raw {
        operation: FlagOperation.Raw;
        slug: string;
        flag?: FlagMutationData.Raw | null;
        exceptions?: string[] | null;
        query?: string | null;
        filter?: any | null;
        filterField?: string | null;
        searchValue?: string | null;
        searchField?: string | null;
        q?: string | null;
        ids?: string[] | null;
        snapshotLabel?: string | null;
    }
}
