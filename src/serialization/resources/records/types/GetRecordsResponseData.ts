/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const GetRecordsResponseData: core.serialization.ObjectSchema<
    serializers.GetRecordsResponseData.Raw,
    Flatfile.GetRecordsResponseData
> = core.serialization
    .object({
        records: core.serialization.lazy(async () => (await import("../../..")).RecordsWithLinks),
        counts: core.serialization.lazyObject(async () => (await import("../../..")).RecordCounts).optional(),
        versionId: core.serialization.lazy(async () => (await import("../../..")).VersionId).optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).SuccessData));

export declare namespace GetRecordsResponseData {
    interface Raw extends serializers.SuccessData.Raw {
        records: serializers.RecordsWithLinks.Raw;
        counts?: serializers.RecordCounts.Raw | null;
        versionId?: serializers.VersionId.Raw | null;
    }
}
