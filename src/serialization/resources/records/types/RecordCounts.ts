/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { FieldRecordCounts } from "./FieldRecordCounts";

export const RecordCounts: core.serialization.ObjectSchema<serializers.RecordCounts.Raw, Flatfile.RecordCounts> =
    core.serialization.object({
        total: core.serialization.number(),
        valid: core.serialization.number(),
        error: core.serialization.number(),
        errorsByField: core.serialization.record(core.serialization.string(), core.serialization.number()).optional(),
        byField: core.serialization.record(core.serialization.string(), FieldRecordCounts).optional(),
    });

export declare namespace RecordCounts {
    export interface Raw {
        total: number;
        valid: number;
        error: number;
        errorsByField?: Record<string, number> | null;
        byField?: Record<string, FieldRecordCounts.Raw> | null;
    }
}
