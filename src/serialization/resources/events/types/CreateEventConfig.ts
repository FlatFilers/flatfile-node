/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
import { EventTopic } from "./EventTopic";
import { BaseEvent } from "./BaseEvent";

export const CreateEventConfig: core.serialization.ObjectSchema<
    serializers.CreateEventConfig.Raw,
    Flatfile.CreateEventConfig
> = core.serialization
    .object({
        topic: EventTopic,
        payload: core.serialization.record(core.serialization.string(), core.serialization.any()),
        deletedAt: core.serialization.date().optional(),
    })
    .extend(BaseEvent);

export declare namespace CreateEventConfig {
    interface Raw extends BaseEvent.Raw {
        topic: EventTopic.Raw;
        payload: Record<string, any>;
        deletedAt?: string | null;
    }
}
