/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const App: core.serialization.ObjectSchema<serializers.App.Raw, Flatfile.App> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).AppId),
    name: core.serialization.string(),
    namespace: core.serialization.string(),
    type: core.serialization.lazy(async () => (await import("../../..")).AppType),
    entity: core.serialization.string(),
    entityPlural: core.serialization.string(),
    icon: core.serialization.string().optional(),
    metadata: core.serialization.any(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
    deletedAt: core.serialization.date().optional(),
    activatedAt: core.serialization.date().optional(),
});

export declare namespace App {
    interface Raw {
        id: serializers.AppId.Raw;
        name: string;
        namespace: string;
        type: serializers.AppType.Raw;
        entity: string;
        entityPlural: string;
        icon?: string | null;
        metadata?: any;
        createdAt: string;
        updatedAt: string;
        deletedAt?: string | null;
        activatedAt?: string | null;
    }
}
