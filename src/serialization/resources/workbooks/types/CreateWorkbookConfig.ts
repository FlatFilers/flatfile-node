/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const CreateWorkbookConfig: core.serialization.ObjectSchema<
    serializers.CreateWorkbookConfig.Raw,
    Flatfile.CreateWorkbookConfig
> = core.serialization.object({
    name: core.serialization.string(),
    labels: core.serialization.list(core.serialization.string()).optional(),
    spaceId: core.serialization.lazy(async () => (await import("../../..")).SpaceId).optional(),
    environmentId: core.serialization.lazy(async () => (await import("../../..")).EnvironmentId).optional(),
    namespace: core.serialization.string().optional(),
    sheets: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).SheetConfig))
        .optional(),
    actions: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).Action))
        .optional(),
    settings: core.serialization.lazyObject(async () => (await import("../../..")).WorkbookConfigSettings).optional(),
    metadata: core.serialization.any().optional(),
});

export declare namespace CreateWorkbookConfig {
    interface Raw {
        name: string;
        labels?: string[] | null;
        spaceId?: serializers.SpaceId.Raw | null;
        environmentId?: serializers.EnvironmentId.Raw | null;
        namespace?: string | null;
        sheets?: serializers.SheetConfig.Raw[] | null;
        actions?: serializers.Action.Raw[] | null;
        settings?: serializers.WorkbookConfigSettings.Raw | null;
        metadata?: any | null;
    }
}
