/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const WorkbookUpdate: core.serialization.ObjectSchema<serializers.WorkbookUpdate.Raw, Flatfile.WorkbookUpdate> =
    core.serialization.object({
        name: core.serialization.string().optional(),
        labels: core.serialization.list(core.serialization.string()).optional(),
        spaceId: core.serialization.lazy(async () => (await import("../../..")).SpaceId).optional(),
        environmentId: core.serialization.lazy(async () => (await import("../../..")).EnvironmentId).optional(),
        namespace: core.serialization.string().optional(),
        sheets: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).SheetConfigOrUpdate))
            .optional(),
        actions: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).Action))
            .optional(),
    });

export declare namespace WorkbookUpdate {
    interface Raw {
        name?: string | null;
        labels?: string[] | null;
        spaceId?: serializers.SpaceId.Raw | null;
        environmentId?: serializers.EnvironmentId.Raw | null;
        namespace?: string | null;
        sheets?: serializers.SheetConfigOrUpdate.Raw[] | null;
        actions?: serializers.Action.Raw[] | null;
    }
}
