/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { WorkbookId } from "../../commons/types/WorkbookId";
import { SpaceId } from "../../commons/types/SpaceId";
import { EnvironmentId } from "../../commons/types/EnvironmentId";
import { Sheet } from "../../sheets/types/Sheet";
import { Action } from "../../commons/types/Action";
import { WorkbookConfigSettings } from "./WorkbookConfigSettings";
import { WorkbookTreatments } from "./WorkbookTreatments";

export const Workbook: core.serialization.ObjectSchema<serializers.Workbook.Raw, Flatfile.Workbook> =
    core.serialization.object({
        id: WorkbookId,
        name: core.serialization.string().optional(),
        spaceId: SpaceId,
        environmentId: EnvironmentId,
        sheets: core.serialization.list(Sheet).optional(),
        labels: core.serialization.list(core.serialization.string()).optional(),
        actions: core.serialization.list(Action).optional(),
        settings: WorkbookConfigSettings.optional(),
        metadata: core.serialization.any().optional(),
        treatments: core.serialization.list(WorkbookTreatments).optional(),
        namespace: core.serialization.string().optional(),
        updatedAt: core.serialization.date(),
        createdAt: core.serialization.date(),
        expiredAt: core.serialization.date().optional(),
        storageType: core.serialization.string().optional(),
    });

export declare namespace Workbook {
    export interface Raw {
        id: WorkbookId.Raw;
        name?: string | null;
        spaceId: SpaceId.Raw;
        environmentId: EnvironmentId.Raw;
        sheets?: Sheet.Raw[] | null;
        labels?: string[] | null;
        actions?: Action.Raw[] | null;
        settings?: WorkbookConfigSettings.Raw | null;
        metadata?: any | null;
        treatments?: WorkbookTreatments.Raw[] | null;
        namespace?: string | null;
        updatedAt: string;
        createdAt: string;
        expiredAt?: string | null;
        storageType?: string | null;
    }
}
