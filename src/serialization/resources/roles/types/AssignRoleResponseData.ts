/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const AssignRoleResponseData: core.serialization.ObjectSchema<
    serializers.AssignRoleResponseData.Raw,
    Flatfile.AssignRoleResponseData
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).ActorRoleId),
    roleId: core.serialization.lazy(async () => (await import("../../..")).RoleId),
    actorId: core.serialization.lazy(async () => (await import("../../..")).ActorIdUnion),
    resourceId: core.serialization.lazy(async () => (await import("../../..")).ResourceIdUnion),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace AssignRoleResponseData {
    interface Raw {
        id: serializers.ActorRoleId.Raw;
        roleId: serializers.RoleId.Raw;
        actorId: serializers.ActorIdUnion.Raw;
        resourceId: serializers.ResourceIdUnion.Raw;
        createdAt: string;
        updatedAt: string;
    }
}
