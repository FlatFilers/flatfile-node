/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const Credentials: core.serialization.Schema<serializers.Credentials.Raw, Flatfile.Credentials> =
    core.serialization
        .union("type", {
            userCredentials: core.serialization.lazyObject(async () => (await import("../../..")).UserCredentials),
            apiCredentials: core.serialization.lazyObject(async () => (await import("../../..")).ApiCredentials),
        })
        .transform<Flatfile.Credentials>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace Credentials {
    type Raw = Credentials.UserCredentials | Credentials.ApiCredentials;

    interface UserCredentials extends serializers.UserCredentials.Raw {
        type: "userCredentials";
    }

    interface ApiCredentials extends serializers.ApiCredentials.Raw {
        type: "apiCredentials";
    }
}
