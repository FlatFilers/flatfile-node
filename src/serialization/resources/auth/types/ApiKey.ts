/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { ApiKeyId } from "./ApiKeyId";
import { RawKey } from "./RawKey";
import { ApiKeyType } from "./ApiKeyType";
import { EnvironmentId } from "../../commons/types/EnvironmentId";
import { AccountId } from "../../commons/types/AccountId";
import { ApiKeyOperation } from "./ApiKeyOperation";

export const ApiKey: core.serialization.ObjectSchema<serializers.ApiKey.Raw, Flatfile.ApiKey> =
    core.serialization.object({
        id: ApiKeyId,
        rawKey: RawKey.optional(),
        type: ApiKeyType,
        environmentId: EnvironmentId.optional(),
        accountId: AccountId.optional(),
        operations: core.serialization.list(ApiKeyOperation),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date().optional(),
        deletedAt: core.serialization.date().optional(),
        secret: core.serialization.string().optional(),
    });

export declare namespace ApiKey {
    export interface Raw {
        id: ApiKeyId.Raw;
        rawKey?: RawKey.Raw | null;
        type: ApiKeyType.Raw;
        environmentId?: EnvironmentId.Raw | null;
        accountId?: AccountId.Raw | null;
        operations: ApiKeyOperation.Raw[];
        createdAt: string;
        updatedAt?: string | null;
        deletedAt?: string | null;
        secret?: string | null;
    }
}
