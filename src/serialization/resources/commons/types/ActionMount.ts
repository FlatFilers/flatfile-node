/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
import { ActionMountSheet } from "./ActionMountSheet";
import { ActionMountWorkbook } from "./ActionMountWorkbook";
import { ActionMountField } from "./ActionMountField";
import { ActionMountDocument } from "./ActionMountDocument";
import { ActionMountFile } from "./ActionMountFile";

export const ActionMount: core.serialization.Schema<serializers.ActionMount.Raw, Flatfile.ActionMount> =
    core.serialization
        .union("type", {
            sheet: ActionMountSheet,
            workbook: ActionMountWorkbook,
            field: ActionMountField,
            document: ActionMountDocument,
            file: ActionMountFile,
        })
        .transform<Flatfile.ActionMount>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ActionMount {
    type Raw = ActionMount.Sheet | ActionMount.Workbook | ActionMount.Field | ActionMount.Document | ActionMount.File;

    interface Sheet extends ActionMountSheet.Raw {
        type: "sheet";
    }

    interface Workbook extends ActionMountWorkbook.Raw {
        type: "workbook";
    }

    interface Field extends ActionMountField.Raw {
        type: "field";
    }

    interface Document extends ActionMountDocument.Raw {
        type: "document";
    }

    interface File extends ActionMountFile.Raw {
        type: "file";
    }
}
