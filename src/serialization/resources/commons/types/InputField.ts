/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const InputField: core.serialization.ObjectSchema<serializers.InputField.Raw, Flatfile.InputField> =
    core.serialization.object({
        key: core.serialization.string(),
        label: core.serialization.string(),
        description: core.serialization.string().optional(),
        type: core.serialization.string(),
        config: core.serialization.lazyObject(async () => (await import("../../..")).InputConfig).optional(),
        constraints: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).InputConstraint))
            .optional(),
    });

export declare namespace InputField {
    interface Raw {
        key: string;
        label: string;
        description?: string | null;
        type: string;
        config?: serializers.InputConfig.Raw | null;
        constraints?: serializers.InputConstraint.Raw[] | null;
    }
}
