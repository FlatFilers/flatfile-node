/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { AccountId } from "../../commons/types/AccountId";
import { AppId } from "../../commons/types/AppId";

export const Account: core.serialization.ObjectSchema<serializers.Account.Raw, Flatfile.Account> =
    core.serialization.object({
        id: AccountId,
        name: core.serialization.string(),
        primaryDomain: core.serialization.string().optional(),
        subdomain: core.serialization.string().optional(),
        vanityDomainDashboard: core.serialization.string().optional(),
        vanityDomainSpaces: core.serialization.string().optional(),
        embeddedDomainWhitelist: core.serialization.list(core.serialization.string()).optional(),
        customFromEmail: core.serialization.string().optional(),
        stripeCustomerId: core.serialization.string().optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.any()),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
        defaultAppId: AppId.optional(),
        dashboard: core.serialization.number().optional(),
    });

export declare namespace Account {
    export interface Raw {
        id: AccountId.Raw;
        name: string;
        primaryDomain?: string | null;
        subdomain?: string | null;
        vanityDomainDashboard?: string | null;
        vanityDomainSpaces?: string | null;
        embeddedDomainWhitelist?: string[] | null;
        customFromEmail?: string | null;
        stripeCustomerId?: string | null;
        metadata: Record<string, any>;
        createdAt: string;
        updatedAt: string;
        defaultAppId?: AppId.Raw | null;
        dashboard?: number | null;
    }
}
