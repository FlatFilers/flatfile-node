/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { MessageRole } from "./MessageRole";

export const MessageApiCreateData: core.serialization.ObjectSchema<
    serializers.MessageApiCreateData.Raw,
    Flatfile.MessageApiCreateData
> = core.serialization.object({
    content: core.serialization.record(core.serialization.string(), core.serialization.any()),
    role: MessageRole,
    state: core.serialization.record(core.serialization.string(), core.serialization.any()).optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.any()).optional(),
});

export declare namespace MessageApiCreateData {
    export interface Raw {
        content: Record<string, any>;
        role: MessageRole.Raw;
        state?: Record<string, any> | null;
        metadata?: Record<string, any> | null;
    }
}
