/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { HeaderDetectionAlgorithm } from "./HeaderDetectionAlgorithm";

export const HeaderDetectionOptions: core.serialization.ObjectSchema<
    serializers.HeaderDetectionOptions.Raw,
    Flatfile.HeaderDetectionOptions
> = core.serialization.object({
    algorithm: HeaderDetectionAlgorithm,
    rowsToSearch: core.serialization.number().optional(),
    skip: core.serialization.number().optional(),
    headers: core.serialization.list(core.serialization.string()).optional(),
    rowNumbers: core.serialization.list(core.serialization.number()).optional(),
});

export declare namespace HeaderDetectionOptions {
    export interface Raw {
        algorithm: HeaderDetectionAlgorithm.Raw;
        rowsToSearch?: number | null;
        skip?: number | null;
        headers?: string[] | null;
        rowNumbers?: number[] | null;
    }
}
