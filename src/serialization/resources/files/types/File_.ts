/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Flatfile } from "@flatfile/api-beta";
import * as core from "../../../../core";

export const File_: core.serialization.ObjectSchema<serializers.File_.Raw, Flatfile.File_> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).FileId),
    name: core.serialization.string(),
    ext: core.serialization.string(),
    mimetype: core.serialization.string(),
    encoding: core.serialization.string(),
    status: core.serialization.lazy(async () => (await import("../../..")).ModelFileStatusEnum),
    size: core.serialization.number(),
    bytesReceived: core.serialization.number(),
    spaceId: core.serialization.lazy(async () => (await import("../../..")).SpaceId),
    workbookId: core.serialization.lazy(async () => (await import("../../..")).WorkbookId),
    createdAt: core.serialization.string(),
    updatedAt: core.serialization.string(),
    sheetId: core.serialization.lazy(async () => (await import("../../..")).SheetId).optional(),
});

export declare namespace File_ {
    interface Raw {
        id: serializers.FileId.Raw;
        name: string;
        ext: string;
        mimetype: string;
        encoding: string;
        status: serializers.ModelFileStatusEnum.Raw;
        size: number;
        bytesReceived: number;
        spaceId: serializers.SpaceId.Raw;
        workbookId: serializers.WorkbookId.Raw;
        createdAt: string;
        updatedAt: string;
        sheetId?: serializers.SheetId.Raw | null;
    }
}
