/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { PromptId } from "../../commons/types/PromptId";
import { AccountId } from "../../commons/types/AccountId";
import { EnvironmentId } from "../../commons/types/EnvironmentId";
import { SpaceId } from "../../commons/types/SpaceId";
import { PromptTypeEnum } from "./PromptTypeEnum";

export const Prompt: core.serialization.ObjectSchema<serializers.Prompt.Raw, Flatfile.Prompt> =
    core.serialization.object({
        id: PromptId,
        createdById: core.serialization.string(),
        accountId: AccountId,
        environmentId: EnvironmentId.optional(),
        spaceId: SpaceId.optional(),
        promptType: PromptTypeEnum,
        prompt: core.serialization.string(),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
        deletedAt: core.serialization.date().optional(),
    });

export declare namespace Prompt {
    export interface Raw {
        id: PromptId.Raw;
        createdById: string;
        accountId: AccountId.Raw;
        environmentId?: EnvironmentId.Raw | null;
        spaceId?: SpaceId.Raw | null;
        promptType: PromptTypeEnum.Raw;
        prompt: string;
        createdAt: string;
        updatedAt: string;
        deletedAt?: string | null;
    }
}
