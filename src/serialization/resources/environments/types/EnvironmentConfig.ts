/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const EnvironmentConfig: core.serialization.ObjectSchema<
    serializers.EnvironmentConfig.Raw,
    Flatfile.EnvironmentConfig
> = core.serialization.object({
    name: core.serialization.string(),
    isProd: core.serialization.boolean(),
    guestAuthentication: core.serialization
        .list(core.serialization.lazy(async () => (await import("../../..")).GuestAuthenticationEnum))
        .optional(),
    features: core.serialization.record(core.serialization.string(), core.serialization.any()).optional(),
});

export declare namespace EnvironmentConfig {
    interface Raw {
        name: string;
        isProd: boolean;
        guestAuthentication?: serializers.GuestAuthenticationEnum.Raw[] | null;
        features?: Record<string, any> | null;
    }
}
