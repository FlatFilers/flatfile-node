/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { Constraint } from "./Constraint";
import { FieldAppearance } from "./FieldAppearance";
import { Action } from "../../commons/types/Action";

export const BaseProperty: core.serialization.ObjectSchema<serializers.BaseProperty.Raw, Flatfile.BaseProperty> =
    core.serialization.object({
        key: core.serialization.string(),
        label: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        constraints: core.serialization.list(Constraint).optional(),
        readonly: core.serialization.boolean().optional(),
        appearance: FieldAppearance.optional(),
        actions: core.serialization.list(Action).optional(),
        metadata: core.serialization.any().optional(),
        treatments: core.serialization.list(core.serialization.string()).optional(),
        alternativeNames: core.serialization.list(core.serialization.string()).optional(),
    });

export declare namespace BaseProperty {
    export interface Raw {
        key: string;
        label?: string | null;
        description?: string | null;
        constraints?: Constraint.Raw[] | null;
        readonly?: boolean | null;
        appearance?: FieldAppearance.Raw | null;
        actions?: Action.Raw[] | null;
        metadata?: any | null;
        treatments?: string[] | null;
        alternativeNames?: string[] | null;
    }
}
