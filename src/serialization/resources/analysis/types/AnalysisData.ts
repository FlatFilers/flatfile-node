/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { AnalysisId } from "../../commons/types/AnalysisId";
import { EnvironmentId } from "../../commons/types/EnvironmentId";
import { AccountId } from "../../commons/types/AccountId";
import { SpaceId } from "../../commons/types/SpaceId";
import { WorkbookId } from "../../commons/types/WorkbookId";
import { SheetId } from "../../commons/types/SheetId";

export const AnalysisData: core.serialization.ObjectSchema<serializers.AnalysisData.Raw, Flatfile.AnalysisData> =
    core.serialization.object({
        id: AnalysisId,
        environmentId: EnvironmentId,
        accountId: AccountId,
        spaceId: SpaceId,
        workbookId: WorkbookId,
        sheetId: SheetId,
        field: core.serialization.string(),
        result: core.serialization.any(),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
    });

export declare namespace AnalysisData {
    export interface Raw {
        id: AnalysisId.Raw;
        environmentId: EnvironmentId.Raw;
        accountId: AccountId.Raw;
        spaceId: SpaceId.Raw;
        workbookId: WorkbookId.Raw;
        sheetId: SheetId.Raw;
        field: string;
        result?: any;
        createdAt: string;
        updatedAt: string;
    }
}
