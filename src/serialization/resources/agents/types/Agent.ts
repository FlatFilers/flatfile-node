/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Flatfile } from "@fern-api/flatfile";
import * as core from "../../../../core";

export const Agent: core.serialization.ObjectSchema<serializers.Agent.Raw, Flatfile.Agent> = core.serialization.object({
    topics: core.serialization
        .list(core.serialization.lazy(async () => (await import("../../..")).EventTopic))
        .optional(),
    compiler: core.serialization.lazy(async () => (await import("../../..")).Compiler).optional(),
    source: core.serialization.string().optional(),
});

export declare namespace Agent {
    interface Raw {
        topics?: serializers.EventTopic.Raw[] | null;
        compiler?: serializers.Compiler.Raw | null;
        source?: string | null;
    }
}
