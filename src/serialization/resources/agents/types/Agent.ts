/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { AgentId } from "../../commons/types/AgentId";
import { AccountId } from "../../commons/types/AccountId";
import { EnvironmentId } from "../../commons/types/EnvironmentId";
import { AgentConfig } from "./AgentConfig";

export const Agent: core.serialization.ObjectSchema<serializers.Agent.Raw, Flatfile.Agent> = core.serialization
    .object({
        id: AgentId,
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
        accountId: AccountId,
        environmentId: EnvironmentId,
        createdFrom: AgentId.optional(),
        lastPropagatedAt: core.serialization.date().optional(),
    })
    .extend(AgentConfig);

export declare namespace Agent {
    export interface Raw extends AgentConfig.Raw {
        id: AgentId.Raw;
        createdAt: string;
        updatedAt: string;
        accountId: AccountId.Raw;
        environmentId: EnvironmentId.Raw;
        createdFrom?: AgentId.Raw | null;
        lastPropagatedAt?: string | null;
    }
}
