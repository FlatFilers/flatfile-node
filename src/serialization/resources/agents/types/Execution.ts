/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { EventId } from "../../commons/types/EventId";

export const Execution: core.serialization.ObjectSchema<serializers.Execution.Raw, Flatfile.Execution> =
    core.serialization.object({
        eventId: EventId,
        success: core.serialization.boolean(),
        createdAt: core.serialization.date(),
        completedAt: core.serialization.date(),
        duration: core.serialization.number(),
        requestTime: core.serialization.number().optional(),
        requestCount: core.serialization.number().optional(),
        memoryUsage: core.serialization.number().optional(),
        topic: core.serialization.string(),
    });

export declare namespace Execution {
    export interface Raw {
        eventId: EventId.Raw;
        success: boolean;
        createdAt: string;
        completedAt: string;
        duration: number;
        requestTime?: number | null;
        requestCount?: number | null;
        memoryUsage?: number | null;
        topic: string;
    }
}
