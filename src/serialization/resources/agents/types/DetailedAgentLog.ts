/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const DetailedAgentLog: core.serialization.ObjectSchema<
    serializers.DetailedAgentLog.Raw,
    Flatfile.DetailedAgentLog
> = core.serialization.object({
    eventId: core.serialization.lazy(async () => (await import("../../..")).EventId),
    success: core.serialization.boolean(),
    createdAt: core.serialization.date(),
    completedAt: core.serialization.date(),
    duration: core.serialization.number(),
    topic: core.serialization.string(),
    context: core.serialization.record(core.serialization.string(), core.serialization.any()),
    log: core.serialization.string().optional(),
});

export declare namespace DetailedAgentLog {
    interface Raw {
        eventId: serializers.EventId.Raw;
        success: boolean;
        createdAt: string;
        completedAt: string;
        duration: number;
        topic: string;
        context: Record<string, any>;
        log?: string | null;
    }
}
