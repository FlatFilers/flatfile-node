/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { DataClipId } from "../../commons/types/DataClipId";
import { SheetId } from "../../commons/types/SheetId";

export const DataClip: core.serialization.ObjectSchema<serializers.DataClip.Raw, Flatfile.DataClip> =
    core.serialization.object({
        id: DataClipId,
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        sourceSheetId: SheetId,
        clipSheetId: SheetId,
        workbookId: core.serialization.string(),
        status: core.serialization.string(),
        createdBy: core.serialization.string(),
        mergedAt: core.serialization.date().optional(),
        deletedAt: core.serialization.date().optional(),
        updatedAt: core.serialization.date(),
        createdAt: core.serialization.date(),
        guestLinkUrl: core.serialization.string().optional(),
        accessToken: core.serialization.string().optional(),
        sharedLinkAccess: core.serialization.string().optional(),
    });

export declare namespace DataClip {
    export interface Raw {
        id: DataClipId.Raw;
        name: string;
        description?: string | null;
        sourceSheetId: SheetId.Raw;
        clipSheetId: SheetId.Raw;
        workbookId: string;
        status: string;
        createdBy: string;
        mergedAt?: string | null;
        deletedAt?: string | null;
        updatedAt: string;
        createdAt: string;
        guestLinkUrl?: string | null;
        accessToken?: string | null;
        sharedLinkAccess?: string | null;
    }
}
