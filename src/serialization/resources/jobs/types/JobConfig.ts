/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Flatfile } from "@flatfile/api-beta";
import * as core from "../../../../core";

export const JobConfig: core.serialization.ObjectSchema<serializers.JobConfig.Raw, Flatfile.JobConfig> =
    core.serialization.object({
        type: core.serialization.lazy(async () => (await import("../../..")).JobType),
        operation: core.serialization.lazy(async () => (await import("../../..")).Operation).optional(),
        source: core.serialization.lazy(async () => (await import("../../..")).FileOrWorkbookId),
        destination: core.serialization.lazy(async () => (await import("../../..")).WorkbookId).optional(),
        config: core.serialization.unknown(),
        trigger: core.serialization.lazy(async () => (await import("../../..")).Trigger).optional(),
        status: core.serialization.lazy(async () => (await import("../../..")).JobStatus).optional(),
        progress: core.serialization.number().optional(),
    });

export declare namespace JobConfig {
    interface Raw {
        type: serializers.JobType.Raw;
        operation?: serializers.Operation.Raw | null;
        source: serializers.FileOrWorkbookId.Raw;
        destination?: serializers.WorkbookId.Raw | null;
        config?: unknown;
        trigger?: serializers.Trigger.Raw | null;
        status?: serializers.JobStatus.Raw | null;
        progress?: number | null;
    }
}
