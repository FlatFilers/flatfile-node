/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Flatfile } from "@flatfile/api";
import * as core from "../../../../core";

export const JobConfig: core.serialization.ObjectSchema<serializers.JobConfig.Raw, Flatfile.JobConfig> =
    core.serialization.object({
        type: core.serialization.lazy(async () => (await import("../../..")).JobType),
        operation: core.serialization.string().optional(),
        source: core.serialization.lazy(async () => (await import("../../..")).JobSource),
        destination: core.serialization.lazy(async () => (await import("../../..")).JobDestination).optional(),
        config: core.serialization.lazy(async () => (await import("../../..")).JobUpdateConfig).optional(),
        trigger: core.serialization.lazy(async () => (await import("../../..")).Trigger).optional(),
        status: core.serialization.lazy(async () => (await import("../../..")).JobStatus).optional(),
        progress: core.serialization.number().optional(),
        fileId: core.serialization.lazy(async () => (await import("../../..")).FileId).optional(),
        mode: core.serialization.lazy(async () => (await import("../../..")).JobMode).optional(),
    });

export declare namespace JobConfig {
    interface Raw {
        type: serializers.JobType.Raw;
        operation?: string | null;
        source: serializers.JobSource.Raw;
        destination?: serializers.JobDestination.Raw | null;
        config?: serializers.JobUpdateConfig.Raw | null;
        trigger?: serializers.Trigger.Raw | null;
        status?: serializers.JobStatus.Raw | null;
        progress?: number | null;
        fileId?: serializers.FileId.Raw | null;
        mode?: serializers.JobMode.Raw | null;
    }
}
