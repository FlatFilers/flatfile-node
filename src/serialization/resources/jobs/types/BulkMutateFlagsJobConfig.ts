/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { WorkbookId } from "../../commons/types/WorkbookId";
import { FlagMutationConfig } from "./FlagMutationConfig";

export const BulkMutateFlagsJobConfig: core.serialization.ObjectSchema<
    serializers.BulkMutateFlagsJobConfig.Raw,
    Flatfile.BulkMutateFlagsJobConfig
> = core.serialization.object({
    workbookId: WorkbookId,
    exceptions: core.serialization.list(core.serialization.string()).optional(),
    query: core.serialization.string().optional(),
    filter: core.serialization.any().optional(),
    filterField: core.serialization.string().optional(),
    searchValue: core.serialization.string().optional(),
    searchField: core.serialization.string().optional(),
    q: core.serialization.string().optional(),
    ids: core.serialization.list(core.serialization.string()).optional(),
    snapshotLabel: core.serialization.string().optional(),
    mutation: FlagMutationConfig,
});

export declare namespace BulkMutateFlagsJobConfig {
    export interface Raw {
        workbookId: WorkbookId.Raw;
        exceptions?: string[] | null;
        query?: string | null;
        filter?: any | null;
        filterField?: string | null;
        searchValue?: string | null;
        searchField?: string | null;
        q?: string | null;
        ids?: string[] | null;
        snapshotLabel?: string | null;
        mutation: FlagMutationConfig.Raw;
    }
}
