/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
import { JobOutcomeNextId } from "./JobOutcomeNextId";
import { JobOutcomeNextUrl } from "./JobOutcomeNextUrl";
import { JobOutcomeNextDownload } from "./JobOutcomeNextDownload";
import { JobOutcomeNextFiles } from "./JobOutcomeNextFiles";
import { JobOutcomeNextWait } from "./JobOutcomeNextWait";
import { JobOutcomeNextSnapshot } from "./JobOutcomeNextSnapshot";
import { JobOutcomeNextRetry } from "./JobOutcomeNextRetry";
import { JobOutcomeNextView } from "./JobOutcomeNextView";

export const JobOutcomeNext: core.serialization.Schema<serializers.JobOutcomeNext.Raw, Flatfile.JobOutcomeNext> =
    core.serialization
        .union("type", {
            id: JobOutcomeNextId,
            url: JobOutcomeNextUrl,
            download: JobOutcomeNextDownload,
            files: JobOutcomeNextFiles,
            wait: JobOutcomeNextWait,
            snapshot: JobOutcomeNextSnapshot,
            retry: JobOutcomeNextRetry,
            view: JobOutcomeNextView,
        })
        .transform<Flatfile.JobOutcomeNext>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace JobOutcomeNext {
    type Raw =
        | JobOutcomeNext.Id
        | JobOutcomeNext.Url
        | JobOutcomeNext.Download
        | JobOutcomeNext.Files
        | JobOutcomeNext.Wait
        | JobOutcomeNext.Snapshot
        | JobOutcomeNext.Retry
        | JobOutcomeNext.View;

    interface Id extends JobOutcomeNextId.Raw {
        type: "id";
    }

    interface Url extends JobOutcomeNextUrl.Raw {
        type: "url";
    }

    interface Download extends JobOutcomeNextDownload.Raw {
        type: "download";
    }

    interface Files extends JobOutcomeNextFiles.Raw {
        type: "files";
    }

    interface Wait extends JobOutcomeNextWait.Raw {
        type: "wait";
    }

    interface Snapshot extends JobOutcomeNextSnapshot.Raw {
        type: "snapshot";
    }

    interface Retry extends JobOutcomeNextRetry.Raw {
        type: "retry";
    }

    interface View extends JobOutcomeNextView.Raw {
        type: "view";
    }
}
