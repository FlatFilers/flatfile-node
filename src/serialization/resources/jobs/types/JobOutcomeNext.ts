/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";

export const JobOutcomeNext: core.serialization.Schema<serializers.JobOutcomeNext.Raw, Flatfile.JobOutcomeNext> =
    core.serialization
        .union("type", {
            id: core.serialization.lazyObject(async () => (await import("../../..")).JobOutcomeNextId),
            url: core.serialization.lazyObject(async () => (await import("../../..")).JobOutcomeNextUrl),
            download: core.serialization.lazyObject(async () => (await import("../../..")).JobOutcomeNextDownload),
            wait: core.serialization.lazyObject(async () => (await import("../../..")).JobOutcomeNextWait),
        })
        .transform<Flatfile.JobOutcomeNext>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace JobOutcomeNext {
    type Raw = JobOutcomeNext.Id | JobOutcomeNext.Url | JobOutcomeNext.Download | JobOutcomeNext.Wait;

    interface Id extends serializers.JobOutcomeNextId.Raw {
        type: "id";
    }

    interface Url extends serializers.JobOutcomeNextUrl.Raw {
        type: "url";
    }

    interface Download extends serializers.JobOutcomeNextDownload.Raw {
        type: "download";
    }

    interface Wait extends serializers.JobOutcomeNextWait.Raw {
        type: "wait";
    }
}
