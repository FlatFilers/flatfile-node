/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
import { SheetId } from "../../commons/types/SheetId";

export const MappingProgramJobConfig: core.serialization.ObjectSchema<
    serializers.MappingProgramJobConfig.Raw,
    Flatfile.MappingProgramJobConfig
> = core.serialization.object({
    sourceSheetId: SheetId,
    destinationSheetId: SheetId,
    mappingRules: core.serialization.list(
        core.serialization.record(core.serialization.string(), core.serialization.any())
    ),
    canRecompute: core.serialization.boolean().optional(),
});

export declare namespace MappingProgramJobConfig {
    interface Raw {
        sourceSheetId: SheetId.Raw;
        destinationSheetId: SheetId.Raw;
        mappingRules: Record<string, any>[];
        canRecompute?: boolean | null;
    }
}
