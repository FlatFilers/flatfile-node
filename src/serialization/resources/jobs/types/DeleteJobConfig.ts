/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Flatfile } from "@fern-api/flatfile";
import * as core from "../../../../core";

export const DeleteJobConfig: core.serialization.ObjectSchema<
    serializers.DeleteJobConfig.Raw,
    Flatfile.DeleteJobConfig
> = core.serialization.object({
    filter: core.serialization.lazy(async () => (await import("../../..")).Filter),
    filterField: core.serialization.string().optional(),
    sheet: core.serialization.lazy(async () => (await import("../../..")).SheetId),
    exceptions: core.serialization
        .list(core.serialization.lazy(async () => (await import("../../..")).RecordId))
        .optional(),
});

export declare namespace DeleteJobConfig {
    interface Raw {
        filter: serializers.Filter.Raw;
        filterField?: string | null;
        sheet: serializers.SheetId.Raw;
        exceptions?: serializers.RecordId.Raw[] | null;
    }
}
