/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Flatfile from "../../../../api/index";
import * as core from "../../../../core";
import { SheetId } from "../../commons/types/SheetId";
import { Filter } from "../../commons/types/Filter";
import { FilterField } from "../../commons/types/FilterField";
import { SearchValue } from "../../commons/types/SearchValue";
import { SearchField } from "../../commons/types/SearchField";
import { RecordId } from "../../commons/types/RecordId";

export const MutateJobConfig: core.serialization.ObjectSchema<
    serializers.MutateJobConfig.Raw,
    Flatfile.MutateJobConfig
> = core.serialization.object({
    sheetId: SheetId,
    mutateRecord: core.serialization.string(),
    mutationId: core.serialization.string().optional(),
    snapshotLabel: core.serialization.string().optional(),
    snapshotId: core.serialization.string().optional(),
    filter: Filter.optional(),
    filterField: FilterField.optional(),
    searchValue: SearchValue.optional(),
    searchField: SearchField.optional(),
    q: core.serialization.string().optional(),
    ids: core.serialization.list(RecordId).optional(),
});

export declare namespace MutateJobConfig {
    export interface Raw {
        sheetId: SheetId.Raw;
        mutateRecord: string;
        mutationId?: string | null;
        snapshotLabel?: string | null;
        snapshotId?: string | null;
        filter?: Filter.Raw | null;
        filterField?: FilterField.Raw | null;
        searchValue?: SearchValue.Raw | null;
        searchField?: SearchField.Raw | null;
        q?: string | null;
        ids?: RecordId.Raw[] | null;
    }
}
