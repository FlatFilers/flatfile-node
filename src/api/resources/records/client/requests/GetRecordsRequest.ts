/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Flatfile from "../../../..";

/**
 * @example
 *     {}
 */
export interface GetRecordsRequest {
    /**
     * Deprecated, use `commitId` instead.
     */
    versionId?: Flatfile.VersionId;
    commitId?: Flatfile.CommitId;
    /**
     * Deprecated, use `sinceCommitId` instead.
     */
    sinceVersionId?: Flatfile.VersionId;
    sinceCommitId?: Flatfile.CommitId;
    sortField?: Flatfile.SortField;
    sortDirection?: Flatfile.SortDirection;
    filter?: Flatfile.Filter;
    /**
     * Name of field by which to filter records
     */
    filterField?: Flatfile.FilterField;
    searchValue?: Flatfile.SearchValue;
    searchField?: Flatfile.SearchField;
    /**
     * The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records. Maximum of 100 allowed.
     */
    ids?: Flatfile.RecordId | Flatfile.RecordId[];
    /**
     * Number of records to return in a page (default 10,000)
     */
    pageSize?: number;
    /**
     * Based on pageSize, which page of records to return
     */
    pageNumber?: number;
    /**
     * **DEPRECATED** Use GET /sheets/:sheetId/counts
     */
    includeCounts?: boolean;
    /**
     * The length of the record result set, returned as counts.total
     */
    includeLength?: boolean;
    /**
     * If true, linked records will be included in the results. Defaults to false.
     */
    includeLinks?: boolean;
    /**
     * Include error messages, defaults to false.
     */
    includeMessages?: boolean;
    /**
     * if "for" is provided, the query parameters will be pulled from the event payload
     */
    for?: Flatfile.EventId;
    /**
     * An FFQL query used to filter the result set
     */
    q?: string;
}
